% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_create_features.R
\name{get_create_features}
\alias{get_create_features}
\title{Creates a feature matrix for CRAN packages}
\usage{
get_create_features(
  TEST = FALSE,
  limiting_n_observations = 100,
  get_input_stored = FALSE,
  get_input_path = "tests/testthat/fixtures/get_NLP_output/get_NLP_output.rds",
  save_output = FALSE,
  save_path = "tests/testthat/fixtures/get_create_features_output",
  file_name = "get_create_features_output.rds"
)
}
\arguments{
\item{TEST}{logical. Default is \code{\link{FALSE}}. If \code{\link{TRUE}}, then a subset of the data that is extracted from CRAN is selected. This is to speed up testing.

More precisely, if \code{\link{TRUE}} a random selection of rows from \code{CRAN_data} is selected, where the number of rows
chosen is given by \code{limiting_n_observations}.}

\item{limiting_n_observations}{Integer that decides the size of the subset of \code{CRAN_data}, when \code{TEST} is \code{\link{TRUE}}.}

\item{get_input_stored}{logical. If \code{\link{TRUE}} then the function uses pre saved data as input, otherwise it runs the \code{CTVsuggestTrain }internal \code{\link[=get_data]{get_data()}} function.}

\item{get_input_path}{string. If \code{get_input_stored} is set to \code{\link{TRUE}}, \code{get_input_path} gives the path location of the pre-saved data.}

\item{save_output}{logical. Default is \code{\link{FALSE}}. If \code{\link{TRUE}}, then the list that is returned is saved to the path set by
\code{save_path}.}

\item{save_path}{string. Sets the path where the list created by the function will be saved,
which is when \code{save_output} is set to \code{\link{TRUE}}}

\item{file_name}{string. Sets the file name for the saved object.}
}
\value{
Returns
\itemize{
\item response_matrix - Matrix with a row for each CRAN package, and a column for each CRAN Task View.
A value of 1 denotes that the package is assigned to the Task View of the corresponding column, and a value of zero if not.
\item features - Matrix with a row for each CRAN package, and a column for each variable
\item All_data - List containing a package and an author network created with cranly.
\item pac_network_igraph - igraph version of the cranly package network.
\item input_CRAN_data - This just a list containing all of the data created by the CTVsuggest:::get_NLP function, so that it is carried forward.
}
}
\description{
In particular this function returns a set of features, and a response matrix for all packages whose data has been extracted.
A subset of these are then used for model training and testing. And the features of the packages are required to generate model predictions, using the trained model.
}
\details{
The \code{get_create_features()} function is run inside \code{\link[=get_CRAN_logs]{get_CRAN_logs()}}.

\code{get_create_features()} carries out the following steps:
\itemize{
\item Firstly, CRAN packages with no author have their maintainer set as the author in the \code{CRAN_cranly_data} object.
\item Then using the \code{\link[cranly:build_network.cranly_db]{cranly::build_network()}}, Author and Package \pkg{cranly} networks are built.
\item Next a list is created, with an element for each CRAN package that is assigned to at least one Task View.
Each element is a character vector with the name of Task Views that the corresponding package is assigned to.
\item Response matrix is created - object is described in the \strong{Value} section of documentation.
\item The feature matrices are then created, these are matrices where each row corresponds to a feature vector for a CRAN package.
The final feature matrix is then a combination of each of these individual matrices.
In the description of the feature matrices below, let \eqn{x} denote an example CRAN package.
\describe{
\item{Package Dependencies}{Feature vector of a package \eqn{x}, is the distribution of the Task View assignation of the hard dependencies of \eqn{x}.

For example if a quarter of the hard dependencies of \eqn{x} belong to Bayesian than the corresponding element of the vector will be 0.25.}
\item{Other Author Packages}{Feature vector of a package \eqn{x}, is the distribution of the Task View assignation of other packages developed by the authors of \eqn{x}.}
\item{Text Data}{\link{feature_matrix_titles_descriptions_packages_cosine} object is created by the \code{\link[=get_NLP]{get_NLP()}} function.}
}
}
}
