% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_NLP.R
\name{get_NLP}
\alias{get_NLP}
\title{Creates the NLP features}
\usage{
get_NLP(
  TEST = FALSE,
  limiting_n_observations = 100,
  get_input_stored = FALSE,
  get_input_path = "tests/testthat/fixtures/get_data_output/get_data_output.rds",
  save_output = FALSE,
  save_path = "tests/testthat/fixtures/get_NLP_output",
  file_name
)
}
\arguments{
\item{TEST}{logical. Default is \code{\link{FALSE}}. If \code{\link{TRUE}}, then a subset of the data that is extracted from CRAN is selected. This is to speed up testing.

More precisely, if \code{\link{TRUE}} a random selection of rows from \code{CRAN_data} is selected, where the number of rows
chosen is given by \code{limiting_n_observations}.}

\item{limiting_n_observations}{Integer that decides the size of the subset of \code{CRAN_data}, when \code{TEST} is \code{\link{TRUE}}.}

\item{get_input_stored}{logical. If \code{\link{TRUE}} then the function uses pre saved data as input, otherwise it runs the \code{CTVsuggestTrain }internal \code{\link[=get_data]{get_data()}} function.}

\item{get_input_path}{string. If \code{get_input_stored} is set to \code{\link{TRUE}}, \code{get_input_path} gives the path loaction of the pre saved data.}

\item{save_output}{logical. Default is \code{\link{FALSE}}. If \code{\link{TRUE}}, then the list that is returned is saved to the path set by
\code{save_path}.}

\item{save_path}{string. Sets the path where the list created by the function will be saved,
which is when \code{save_output} is set to \code{\link{TRUE}}}

\item{file_name}{string. Sets the file name for the saved object.}
}
\value{
Returns
\itemize{
\item feature_matrix_titles_descriptions_packages_cosine - list.
With element for each package being a vector of length of the number of task views.
Each element of the vector is generated by taking the cosine similarity of the TF_IDF vector of the corresponding Task View with the package text data TF_IDF
vector. The IDF term for the TF_IDF vector of the package text is generated by the Task View text corpus.
\item input_CRAN_data - This just a list containing all of the data created by the CTVsuggest:::get_data function, so that it is carried forward.
}
}
\description{
\code{get_nlp()} creates the NLP features for the model using Task View text and Package description text.
The function extracts the Task View text from the source markdown files on GitHub, then cleans them.
Then with the corpus of words generated from the Task Views text, it creates TF_IDF vectors for each of the words.
}
