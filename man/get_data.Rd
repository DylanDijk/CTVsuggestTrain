% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_data.R
\name{get_data}
\alias{get_data}
\title{Extracts data used to create features for model}
\usage{
get_data(
  TEST = FALSE,
  limiting_n_observations = 100,
  save_output = FALSE,
  save_path = "tests/testthat/fixtures/get_data_output",
  file_name
)
}
\arguments{
\item{TEST}{logical. Default is \code{\link{FALSE}}. If \code{\link{TRUE}}, then a subset of the data that is extracted from CRAN is selected. This is to speed up testing.

More precisely, if \code{\link{TRUE}} a random selection of rows from \code{CRAN_data} is selected, where the number of rows
chosen is given by \code{limiting_n_observations}.}

\item{limiting_n_observations}{Integer that decides the size of the subset of \code{CRAN_data}, when \code{TEST} is \code{\link{TRUE}}.}

\item{save_output}{logical. Default is \code{\link{FALSE}}. If \code{\link{TRUE}}, then the list that is returned is saved to the path set by
\code{save_path}.}

\item{save_path}{string. Sets the path where the list created by the function will be saved,
which is when \code{save_output} is set to \code{\link{TRUE}}}

\item{file_name}{string. Sets the file name for the saved object.}
}
\value{
\code{get_data} returns data objects required for rest of scripts involved in training the model:
\itemize{
\item CRAN_data - Data extracted from CRAN package repository using \code{\link[tools:CRANtools]{tools::CRAN_package_db()}}. Duplicated packages removed. If \code{TEST} = \code{\link{TRUE}} then a random selection of rows \code{CRAN_data} of length \code{limiting_n_observations} is selected.
\item all_CRAN_pks - Package names that have data included in the \code{CRAN_data} object.
\item CRAN_cranly_data - \code{\link{data.frame}} with class \code{\link{cranly_db}} that is created using \code{\link[cranly:clean_CRAN_db]{cranly::clean_CRAN_db()}}. The \code{\link{data.frame}} has the same variables as \code{CRAN_data}.
\item tvdb - list object of class \code{ctvlist} that contains information about the Task Views. This is downloaded using the function \code{CTVsuggest:::download_taskview_data()} which is a modified version of \code{\link[RWsearch:tvdb]{RWsearch::tvdb_down()}}
\item TEST - returns the \code{TEST} value used in the function. As this function is used within the \code{get_nlp} function, and information about whether a subset of the full data
is being used needs to be carried forward.
}
}
\description{
Extracts data used to create features for model
}
\details{
The \code{get_data()} function is run inside \code{\link[=get_NLP]{get_NLP()}}.

\code{get_data()} extracts the following types of data:
\itemize{
\item Task View data, using the \code{\link[=download_taskview_data]{download_taskview_data()}}.
\item CRAN data from the CRAN package repository using \code{\link[tools:CRANtools]{tools::CRAN_package_db()}}.
}

\code{get_data()} then also runs the \code{\link[cranly:clean_CRAN_db]{cranly::clean_CRAN_db()}} function on the CRAN data repository.
}
\examples{
\donttest{
   CTVsuggest:::get_data(TEST = TRUE, limiting_n_observations = 100)
   }
}
