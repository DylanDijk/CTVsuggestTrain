[{"path":"https://dylandijk.github.io/CTVsuggestTrain/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 CTVsuggest authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dylan Dijk. Author, maintainer.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dijk D (2023). CTVsuggestTrain: Builds Recommendation Model CTVsuggest Package. https://dylandijk.github.io/CTVsuggestTrain/, https://github.com/DylanDijk/CTVsuggestTrain.","code":"@Manual{,   title = {CTVsuggestTrain: Builds Recommendation Model for CTVsuggest Package},   author = {Dylan Dijk},   year = {2023},   note = {https://dylandijk.github.io/CTVsuggestTrain/, https://github.com/DylanDijk/CTVsuggestTrain}, }"},{"path":"https://dylandijk.github.io/CTVsuggestTrain/index.html","id":"ctvsuggesttrain","dir":"","previous_headings":"","what":"Builds Recommendation Model for CTVsuggest Package","title":"Builds Recommendation Model for CTVsuggest Package","text":"CTVsuggestTrain carries model building, creates data.frame containing classification probabilities outputted CTVsuggest package. R packages based follow work 4th year university dissertation supervised Ioannis Kosmidis CTVsuggestTrain R package single exported function: Train_model(), constructs features trains multinomial logistic regression model objective classifying CRAN packages available CRAN Task Views. detailed description model, view Model Section CTVsuggest Overview Vignette. Important note order output suggestions using CTVsuggest package, can completely ignore CTVsuggestTrain package. use CTVsuggestTrain train model weekly order update predictions provided CTVsuggest. code packaged makes easier carry model training, allows model building transparent others inspect. detail workflow, view Packages Workflow Section CTVsuggest Overview Vignette.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Builds Recommendation Model for CTVsuggest Package","text":"can install development version CTVsuggestTrain GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"DylanDijk/CTVsuggestTrain\")"},{"path":"https://dylandijk.github.io/CTVsuggestTrain/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Builds Recommendation Model for CTVsuggest Package","text":"following code saves model, model accuracy data.frame containing classification probabilities packages \"OUTPUT\" directory current working directory. code example code run retrieve date model. Train_model() function takes run, machine (Windows Intel(R) Core(TM) i5-10210U CPU @ 1.60GHz, 2112 Mhz, 4 Cores, 8 Logical Processors) takes 30 minutes.","code":"library(CTVsuggestTrain) Train_model(save_output = TRUE, save_path = \"OUTPUT/\")"},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/CTVsuggestTrain-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CTVsuggestTrain: Builds Recommendation Model for CTVsuggest Package — CTVsuggestTrain-package","title":"CTVsuggestTrain: Builds Recommendation Model for CTVsuggest Package — CTVsuggestTrain-package","text":"Contains functions construct model aims classify packages Task Views. predictions model outputted CTVsuggest package.","code":""},{"path":[]},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/CTVsuggestTrain-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CTVsuggestTrain: Builds Recommendation Model for CTVsuggest Package — CTVsuggestTrain-package","text":"Maintainer: Dylan Dijk zl2291@bristol.ac.uk (ORCID)","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/Train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Trains model — Train_model","title":"Trains model — Train_model","text":"Train_model() trains multinomial logistic regression model LASSO penalty, outcome categories current CRAN Task Views additional \"None\" category.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/Train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trains model — Train_model","text":"","code":"Train_model(   TEST = FALSE,   limiting_n_observations = 100,   get_input_stored = FALSE,   get_input_path =     \"tests/testthat/fixtures/get_CRAN_logs_output/get_CRAN_logs_output.rds\",   save_output = FALSE,   save_path = \"OUTPUT/\" )"},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/Train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trains model — Train_model","text":"TEST logical. Default FALSE. TRUE, subset data extracted CRAN selected. speed testing. precisely, TRUE random selection rows CRAN_data selected, number rows chosen given limiting_n_observations. limiting_n_observations Integer decides size subset CRAN_data, TEST TRUE. get_input_stored logical. TRUE function uses pre saved data input, otherwise runs CTVsuggestTrain internal get_data() function. get_input_path string. get_input_stored set TRUE, get_input_path gives path location pre-saved data. save_output logical. Default FALSE. TRUE, list returned saved path set save_path. save_path string. Sets path list created function saved, save_output set TRUE","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/Train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trains model — Train_model","text":"Returns predicted_probs_for_suggestions - data.frame row predicted probability vector CRAN package assigned Task View meet monthly download threshold. predicted_probs_for_suggestions created using predict() function model object. model - Model object model_accuracy - percentage value says accurate model test set.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/Train_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trains model — Train_model","text":"Train_model() function, relies four internal functions: get_data() get_NLP() get_create_features() get_CRAN_logs() four internal functions run within order e.g. Train_model() initiates running get_CRAN_logs() initiates get_create_features(). Hence entire pipeline begins get_data(). Train_model() function , running get_CRAN_logs(), carries model training using response matrix feature matrix constructed four internal functions mentioned .","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/Train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trains model — Train_model","text":"","code":"if (FALSE) { Train_model(save_output = TRUE, save_path = \"OUTPUT/\") }"},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/download_taskview_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads Task View data — download_taskview_data","title":"Downloads Task View data — download_taskview_data","text":"modification RWsearch::tvdb_down function, modified version save file disk. Default option extract Task View data CRAN Task View repository: \"https://cran.rstudio.com/src/contrib/Views.rds\"","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/download_taskview_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads Task View data — download_taskview_data","text":"","code":"download_taskview_data(repos = getOption(\"repos\")[1])"},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/download_taskview_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads Task View data — download_taskview_data","text":"repos Default option set CRAN repository \"https://cran.rstudio.com/\".","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/download_taskview_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads Task View data — download_taskview_data","text":"Data current Task Views available.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_CRAN_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates a monthly package download threshold — get_CRAN_logs","title":"Calculates a monthly package download threshold — get_CRAN_logs","text":"Looks monthly downloads packages assigned Task View. uses data select  monthly package download threshold decide packages, assigned Task View, used model training.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_CRAN_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates a monthly package download threshold — get_CRAN_logs","text":"","code":"get_CRAN_logs(   TEST = FALSE,   limiting_n_observations = 100,   get_input_stored = FALSE,   get_input_path =     \"tests/testthat/fixtures/get_create_features_output/get_create_features_output.rds\",   save_output = FALSE,   save_path = \"tests/testthat/fixtures/get_CRAN_logs_output\",   file_name = \"get_CRAN_logs_output.rds\" )"},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_CRAN_logs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates a monthly package download threshold — get_CRAN_logs","text":"TEST logical. Default FALSE. TRUE, subset data extracted CRAN selected. speed testing. precisely, TRUE random selection rows CRAN_data selected, number rows chosen given limiting_n_observations. limiting_n_observations Integer decides size subset CRAN_data, TEST TRUE. get_input_stored logical. TRUE function uses pre saved data input, otherwise runs CTVsuggestTrain internal get_data() function. get_input_path string. get_input_stored set TRUE, get_input_path gives path location pre-saved data. save_output logical. Default FALSE. TRUE, list returned saved path set save_path. save_path string. Sets path list created function saved, save_output set TRUE file_name string. Sets file name saved object.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_CRAN_logs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates a monthly package download threshold — get_CRAN_logs","text":"Returns no_tsk_pckgs_meet_threshold - vector packages assigned Task View meet monthly download threshold. response_matrix, features, final_package_names, tvdb - objects created CTVsuggest:::get_create_features function, need carried forward.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_CRAN_logs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates a monthly package download threshold — get_CRAN_logs","text":"get_CRAN_logs() function run inside Train_model(). get_CRAN_logs() carries following steps: Firstly, creates list object gives monthly downloads package Task View past month using cranlogs::cran_downloads(). Using list, Computes 75th percentile monthly downloads Next, vector packages assigned Task View whose monthly downloads exceeds threshold created. packages labelled belonging Task Viw training model.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_NLP.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates the NLP features — get_NLP","title":"Creates the NLP features — get_NLP","text":"get_NLP() creates NLP features model using Task View text Package description text. function extracts Task View text source markdown files GitHub, cleans . corpus words generated Task Views text, creates TF_IDF vectors words. computes cosine similarity text package titles descriptions, TF-IDF vectors Task View. Therefore, generating set features package, number features given number Task Views.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_NLP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates the NLP features — get_NLP","text":"","code":"get_NLP(   TEST = FALSE,   limiting_n_observations = 100,   get_input_stored = FALSE,   get_input_path = \"tests/testthat/fixtures/get_data_output/get_data_output.rds\",   save_output = FALSE,   save_path = \"tests/testthat/fixtures/get_NLP_output\",   file_name )"},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_NLP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates the NLP features — get_NLP","text":"TEST logical. Default FALSE. TRUE, subset data extracted CRAN selected. speed testing. precisely, TRUE random selection rows CRAN_data selected, number rows chosen given limiting_n_observations. limiting_n_observations Integer decides size subset CRAN_data, TEST TRUE. get_input_stored logical. TRUE function uses pre saved data input, otherwise runs CTVsuggestTrain internal get_data() function. get_input_path string. get_input_stored set TRUE, get_input_path gives path location pre-saved data. save_output logical. Default FALSE. TRUE, list returned saved path set save_path. save_path string. Sets path list created function saved, save_output set TRUE file_name string. Sets file name saved object.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_NLP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates the NLP features — get_NLP","text":"Returns feature_matrix_titles_descriptions_packages_cosine - list. element package vector length number task views. element vector generated taking cosine similarity TF_IDF vector corresponding Task View package text data TF_IDF vector. IDF term TF_IDF vector package text generated Task View text corpus. input_CRAN_data - just list containing data created CTVsuggest:::get_data function, carried forward.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_NLP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates the NLP features — get_NLP","text":"get_NLP() function run inside get_create_features(). get_NLP() carries following steps: First markdown files generate CRAN Task View description pages imported. text cleaned, example, links removed. Using text extracted Task View, data frame created gives count word Task View. Using object, compute TF-IDF weightings word. data frame dimension previous object mentioned. Next use code, provided Dirk Eddilbettel, extracts titles descriptions packages CRAN. given matrix object row package. create list, consisting data frames package, give counts words package text. package, take cosine similarity package text TF-IDF text Task View.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_create_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a feature matrix for CRAN packages — get_create_features","title":"Creates a feature matrix for CRAN packages — get_create_features","text":"get_create_features() returns set features, response matrix packages whose data extracted. subset used model training testing. features packages required generate model predictions, using trained model.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_create_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a feature matrix for CRAN packages — get_create_features","text":"","code":"get_create_features(   TEST = FALSE,   limiting_n_observations = 100,   get_input_stored = FALSE,   get_input_path = \"tests/testthat/fixtures/get_NLP_output/get_NLP_output.rds\",   save_output = FALSE,   save_path = \"tests/testthat/fixtures/get_create_features_output\",   file_name = \"get_create_features_output.rds\" )"},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_create_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a feature matrix for CRAN packages — get_create_features","text":"TEST logical. Default FALSE. TRUE, subset data extracted CRAN selected. speed testing. precisely, TRUE random selection rows CRAN_data selected, number rows chosen given limiting_n_observations. limiting_n_observations Integer decides size subset CRAN_data, TEST TRUE. get_input_stored logical. TRUE function uses pre saved data input, otherwise runs CTVsuggestTrain internal get_data() function. get_input_path string. get_input_stored set TRUE, get_input_path gives path location pre-saved data. save_output logical. Default FALSE. TRUE, list returned saved path set save_path. save_path string. Sets path list created function saved, save_output set TRUE file_name string. Sets file name saved object.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_create_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a feature matrix for CRAN packages — get_create_features","text":"Returns response_matrix - Matrix row CRAN package, column CRAN Task View. value 1 denotes package assigned Task View corresponding column, value zero . features - Matrix row CRAN package, column variable. feature matrix constructed using three different types features described end Details section. All_data - List containing package author network created cranly. pac_network_igraph - igraph version cranly package network. input_CRAN_data - just list containing data created get_NLP(), carried forward.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_create_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a feature matrix for CRAN packages — get_create_features","text":"get_create_features() function run inside get_CRAN_logs(). get_create_features() carries following steps: Firstly, CRAN packages author maintainer set author CRAN_cranly_data object. using cranly::build_network(), Author Package cranly networks built. Next list created, element CRAN package assigned least one Task View. element character vector name Task Views corresponding package assigned . Response matrix created - object described Value section documentation. feature matrices created, matrices row corresponds feature vector CRAN package. final feature matrix combination individual matrices. description feature matrices , let \\(x\\) denote example CRAN package. Package Dependencies Feature vector package \\(x\\), distribution Task View assignation hard dependencies \\(x\\). example quarter hard dependencies \\(x\\) belong Bayesian corresponding element vector 0.25. Author Packages Feature vector package \\(x\\), distribution Task View assignation packages developed authors \\(x\\). Text Data feature_matrix_titles_descriptions_packages_cosine object created get_NLP() function.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts data used to create features for model — get_data","title":"Extracts data used to create features for model — get_data","text":"Extracts data used create features model","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts data used to create features for model — get_data","text":"","code":"get_data(   TEST = FALSE,   limiting_n_observations = 100,   save_output = FALSE,   save_path = \"tests/testthat/fixtures/get_data_output\",   file_name )"},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts data used to create features for model — get_data","text":"TEST logical. Default FALSE. TRUE, subset data extracted CRAN selected. speed testing. precisely, TRUE random selection rows CRAN_data selected, number rows chosen given limiting_n_observations. limiting_n_observations Integer decides size subset CRAN_data, TEST TRUE. save_output logical. Default FALSE. TRUE, list returned saved path set save_path. save_path string. Sets path list created function saved, save_output set TRUE file_name string. Sets file name saved object.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts data used to create features for model — get_data","text":"get_data returns data objects required rest scripts involved training model: CRAN_data - Data extracted CRAN package repository using tools::CRAN_package_db(). Duplicated packages removed. TEST = TRUE random selection rows CRAN_data length limiting_n_observations selected. all_CRAN_pks - Package names data included CRAN_data object. CRAN_cranly_data - data.frame class cranly_db created using cranly::clean_CRAN_db(). function cranly::clean_CRAN_db() cleans data.frame generated tools::CRAN_package_db(), variables CRAN_data. tvdb - list object class ctvlist contains information Task Views. downloaded using function CTVsuggest:::download_taskview_data() modified version RWsearch::tvdb_down() TEST - returns TEST value used function. function used within get_nlp function, information whether subset full data used needs carried forward.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extracts data used to create features for model — get_data","text":"get_data() function run inside get_NLP(). get_data() extracts following types data: Task View data, using download_taskview_data(). CRAN data CRAN package repository using tools::CRAN_package_db(). get_data() also runs cranly::clean_CRAN_db() function CRAN data repository.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts data used to create features for model — get_data","text":"","code":"if (FALSE) { CTVsuggestTrain:::get_data(TEST = TRUE, limiting_n_observations = 100) }"},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/save_or_return_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Save or return objects — save_or_return_objects","title":"Save or return objects — save_or_return_objects","text":"Helper function returns saves objects created functions package.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/save_or_return_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save or return objects — save_or_return_objects","text":"","code":"save_or_return_objects(   TEST,   list_to_return,   limiting_n_observations,   save_output,   save_path,   file_name )"},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/save_or_return_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save or return objects — save_or_return_objects","text":"TEST Logical. TRUE objects saving generated test. list_to_return List. List objects want saved. limiting_n_observations Integer. objects generated TEST , limiting_n_observations. save_output Logical. Determines whether list_to_return saved disk return current R environment. save_path String. Path list_to_return saved. file_name String. File name saved object.","code":""},{"path":"https://dylandijk.github.io/CTVsuggestTrain/reference/save_or_return_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save or return objects — save_or_return_objects","text":"function saves returns list_to_return list, depending value save_output.","code":""}]
